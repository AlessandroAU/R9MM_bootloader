[platformio]
#default_envs = SX1280_RX_Nano_PCB_v0.5
#default_envs = GHOST_RX_v1.2
src_dir = Src
lib_dir = Drivers

[generic]
includes_F1xx =
    -I Src/stm32f1xx
    -I Drivers/STM32F1xx_HAL_Driver/Inc
    -I Drivers/CMSIS/Device/ST/STM32F1xx/Include
    -I Drivers/CMSIS/Include
unflags = -nostartfiles -nostdlib
flags =
    -Wl,-Map,firmware.map
    -D USE_FULL_LL_DRIVER=1
    -D GPIO_USE_LL=1
    -D USART_USE_LL=1

[env:R9MM]
platform = ststm32
framework = stm32cube
board = genericSTM32F103RB
board_build.mcu = stm32f103rbt6
board_build.f_cpu = 72000000L
board_upload.maximum_size = 32768
build_unflags = ${generic.unflags}
build_flags =
    #${generic.includes_F1xx}
    -D MCU_TYPE=R9MM
    -D TARGET_R9MM=1
    -DBUTTON -DLED_GRN -DLED_RED
    -D LED_RED_PIN="C,1"
    -D LED_GREEN_PIN="B,3"
    -D BUTTON_PIN="C,13"
    -D UART_NUM=1
    -D HSI_VALUE=8000000
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_OFFSET=0x0
    -Wl,--defsym=FLASH_APP_OFFSET=32K
    -D FLASH_APP_OFFSET=0x8000u
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
#lib_deps = STM32F1xx_HAL_Driver
#src_filter = +<*.c> +<stm32f1xx/*>
src_filter = +<*.c>
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py

[env:R9M]
platform = ststm32
framework = stm32cube
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
board_build.f_cpu = 72000000L
board_upload.maximum_size = 8192
build_unflags = ${generic.unflags}
build_flags =
    #${generic.includes_F1xx}
    -D MCU_TYPE=R9M
    -D FRSKY=1
    -D TARGET_R9M=1
    -DLED_GRN -DLED_RED
    -D UART_NUM=3
    -D HALF_DUPLEX=1
    -D UART_BAUD=57600
#    -DDEBUG_UART=1
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_OFFSET=0x0
    -Wl,--defsym=FLASH_APP_OFFSET=8K
    -D FLASH_APP_OFFSET=0x2000u
    #-DHAL_TIM_MODULE_ENABLED
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
#lib_deps = STM32F1xx_HAL_Driver
#src_filter = +<*.c> +<stm32f1xx/*>
src_filter = +<*.c>
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py

[env:R9M_stock]
platform = ststm32
framework = stm32cube
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
board_build.f_cpu = 72000000L
board_upload.maximum_size = 8192
build_unflags = ${generic.unflags}
build_flags =
    #${generic.includes_F1xx}
    -D MCU_TYPE=R9M
    -D STK500=1
    -D TARGET_R9M=1
    -DLED_GRN -DLED_RED
    -D UART_NUM=3
    -D HALF_DUPLEX=1
    -D UART_BAUD=57600
#    -DDEBUG_UART=1
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_OFFSET=0x2000
    -Wl,--defsym=FLASH_APP_OFFSET=8K
    -D FLASH_APP_OFFSET=0x4000u
    #-DHAL_TIM_MODULE_ENABLED
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
#lib_deps = STM32F1xx_HAL_Driver
#src_filter = +<*.c> +<stm32f1xx/*>
src_filter = +<*.c>
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py

[env:RHF76_052]
platform = ststm32
framework = stm32cube
board = rhf76_052
board_build.mcu = stm32l051c8t6
board_build.f_cpu = 32000000L
board_upload.maximum_size = 16384
build_unflags = ${generic.unflags}
build_flags =
    -D MCU_TYPE=RHF76_052
    -D TARGET_RHF76=1
    -D LED_RED=1
    #-DBUTTON -DLED_GRN
    -D UART_NUM=1 -D AFIO_USART1_ENABLE=1
    -Wl,--defsym=RAM_SIZE=8K
    -Wl,--defsym=FLASH_OFFSET=0x0
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -D FLASH_APP_OFFSET=0x4000u
    -D HSE_VALUE=12000000U
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
src_filter = +<*.c>
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py

[env:RAK4200]
platform = ststm32
framework = stm32cube
board = rak4200
board_upload.maximum_size = 16384
build_unflags = ${generic.unflags}
build_flags =
    -D MCU_TYPE=RAK4200
    -D TARGET_RAK4200=1
    -D LED_RED=1
    -D UART_NUM=1
    -D HSI_VALUE=16000000
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_OFFSET=0x0
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -D FLASH_APP_OFFSET=0x4000u
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
src_filter = +<*.c>
debug_build_flags = -O0 -ggdb3 -g3
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py
debug_tool = stlink

[IGNORE_env:RAK811]
platform = ststm32
framework = stm32cube
board = rak811_tracker
board_build.mcu = stm32l151rbt6
board_build.f_cpu = 32000000L
board_upload.maximum_size = 16384
build_unflags = ${generic.unflags}
build_flags =
    -D MCU_TYPE=RAK811
    -D STM32L1xx
    -D TARGET_RAK811=1
    #-D LED_RED=1
    #-DBUTTON -DLED_GRN
    -D UART_NUM=1 -D AFIO_USART1_ENABLE=1
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -D FLASH_APP_OFFSET=0x4000u
    ${generic.flags}
src_filter = +<*.c>
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py

[env:SX1280_RX_2020_PCB_v0.2]
platform = ststm32
framework = stm32cube
board = genericSTM32F103RB
board_build.mcu = stm32f103rbt6
board_build.f_cpu = 72000000L
board_upload.maximum_size = 16384
build_unflags = ${generic.unflags}
build_flags =
    #${generic.includes_F1xx}
    -D MCU_TYPE=SX1280_RX_2020_v0_2
    -D TARGET_SX1280_RX_2020_v02=1
    -D LED_RED=1
    #-D "LED_RED_PIN="B,15"
    -D UART_NUM=1
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_OFFSET=0x0
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -D FLASH_APP_OFFSET=0x4000u
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
#lib_deps = STM32F1xx_HAL_Driver
#src_filter = +<*.c> +<stm32f1xx/*>
src_filter = +<*.c>
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py

[env:SX1280_RX_Nano_PCB_v0.5]
platform = ststm32@7.2.0
framework = stm32cube
board = nucleo_l432kc
board_build.mcu = stm32l432kbu6
board_build.f_cpu = 80000000L
board_upload.maximum_size = 16384
build_unflags = ${generic.unflags}
build_flags =
    -D MCU_TYPE=SX1280_RX_CCG_NANO_v0_5
    -D STM32L4xx=1
    -D TARGET_SX1280_RX_Nano_v05=1
    -D LED_RED=1
    -D BUTTON=0
    #-DBUTTON_PIN="A,3"
    #-DLED_RED_PIN="B,5"
    -D UART_NUM=1
    -D AFIO_USART1_ENABLE=1
    -D HSI_VALUE=16000000
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -D FLASH_APP_OFFSET=0x4000u
    ${generic.flags}
src_filter = +<*.c>
debug_build_flags = -O0 -ggdb3 -g3
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py
debug_tool = stlink

[env:R9MX]
platform = ststm32@7.2.0
framework = stm32cube
board = nucleo_l433rc_p
board_build.mcu = stm32l433cby6
#board_build.f_cpu = 80000000L
#board_upload.maximum_size = 16384
board_upload.maximum_size = 32768
build_unflags = ${generic.unflags}
build_flags =
    -D MCU_TYPE=R9MX
    -D STM32L4xx=1
    -D TARGET_R9MX=1
    -D BUTTON=1
    -D LED_GRN=1
    -D LED_RED=1
    -D UART_NUM=1
    -D HSI_VALUE=16000000
    -Wl,--defsym=FLASH_APP_OFFSET=32K
    -D FLASH_APP_OFFSET=0x8000u
    ${generic.flags}
src_filter = +<*.c>
debug_build_flags = -O0 -ggdb3 -g3
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py
debug_tool = stlink

[env:GHOST_ATTO_v1.2]
platform = ststm32@7.2.0
framework = stm32cube
board = stm32f301
board_upload.maximum_size = 16384
build_unflags = ${generic.unflags}
build_flags =
    -D MCU_TYPE=GHOST_ATTO_v1_2
    -D TARGET_GHOST_RX_V1_2=1
    -D BUTTON=1
    -D WS2812_LED_PIN="A,7"
    -D BUTTON_PIN="A,12"
    -D HALF_DUPLEX=1
    -D HSI_VALUE=8000000
    -Wl,--defsym=RAM_SIZE=0x4000
    -Wl,--defsym=FLASH_OFFSET=0x0
    -Wl,--defsym=FLASH_APP_OFFSET=0x4000
    -D FLASH_APP_OFFSET=0x4000u
    ${generic.flags}
board_build.ldscript = linker/stm32.ld
src_filter = +<*.c>
debug_build_flags = -O0 -ggdb3 -g3
upload_protocol = custom
extra_scripts =
	python/upload_stlink.py
debug_tool = stlink

